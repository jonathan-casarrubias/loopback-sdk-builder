/* tslint:disable */
import { SDKToken } from './models/BaseModels';

import * as reducers from './reducers/index';

import { LoopbackAuthEffects } from './effects/auth';
import { localStorageSync } from 'ngrx-store-localstorage';
import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';

<% for (var modelName in models) {
  // capitalize the model name
  modelName = modelName[0].toUpperCase() + modelName.slice(1);
  -%>
  import { <%- modelName %>Effects } from './effects/<%- modelName %>';
  <% } // for modelName in models -%>
  import {ActionReducerMap, MetaReducer} from '@ngrx/store';

  import {environment} from '../../../environments/environment';
  import {storeFreeze} from 'ngrx-store-freeze';

  export interface LoopbackStateInterface {
    LoopbackAuth: SDKToken;
    <% for (var modelName in models) {
      // capitalize the model name
      modelName = modelName[0].toUpperCase() + modelName.slice(1);
      -%>
      <%- modelName %>s: reducers.<%- modelName %>sState;
      <% } // for modelName in models -%>
    };

    export const LoopbackReducer: ActionReducerMap<LoopbackStateInterface> = {
      LoopbackAuth: reducers.LoopbackAuthReducer,
      <% for (var modelName in Object.assign({}, models, throughModels)) {
        // capitalize the model name
        modelName = modelName[0].toUpperCase() + modelName.slice(1);
        -%>
        <%- modelName %>s: reducers.<%- modelName %>sReducer,
        <% } // for modelName in models -%>
      };

      export const LoopbackEffects = [
        LoopbackAuthEffects,
        <% for (var modelName in models) {
          // capitalize the model name
          modelName = modelName[0].toUpperCase() + modelName.slice(1);
          -%>
          <%- modelName %>Effects,
          <% } // for modelName in models -%>
        ];

  export function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {
      return localStorageSync({keys: ['LvUserss', 'Watchfacess', 'LoopbackAuth', 'Wall_cards']})(reducer);
  }

  export const loopbackMetaReducers: MetaReducer<LoopbackStateInterface>[] = !environment.production ? [localStorageSyncReducer] : [localStorageSyncReducer];
  export const metaReducers: Array<MetaReducer<any, any>> = [localStorageSyncReducer];
