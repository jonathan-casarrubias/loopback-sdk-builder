/* tslint:disable */
import { SDKToken, LoopbackAction } from './models/BaseModels';

import { LoopbackAuthEffects } from './effects/auth';
import { LoopbackAuthReducer } from './reducers/auth';

<% for (var modelName in models) {
  // capitalize the model name
  modelName = modelName[0].toUpperCase() + modelName.slice(1);
-%>
import { <%- modelName %>Effects } from './effects/<%- modelName %>';
import { <%- modelName %>sState, <%- modelName %>sReducer } from './reducers/<%- modelName %>';
<% } // for modelName in models -%>

export interface LoopbackStateInterface {
  LoopbackAuth: SDKToken;
<% for (var modelName in models) {
  // capitalize the model name
  modelName = modelName[0].toUpperCase() + modelName.slice(1);
-%>
  <%- modelName %>s: <%- modelName %>sState;
<% } // for modelName in models -%>
};

export const LoopbackReducer = {
  LoopbackAuth: LoopbackAuthReducer,
<% for (var modelName in Object.assign({}, models, throughModels)) {
  // capitalize the model name
  modelName = modelName[0].toUpperCase() + modelName.slice(1);
-%>
	<%- modelName %>s: <%- modelName %>sReducer,
<% } // for modelName in models -%>
};

export const LoopbackEffects = [
  LoopbackAuthEffects,
<% for (var modelName in models) {
  // capitalize the model name
  modelName = modelName[0].toUpperCase() + modelName.slice(1);
-%>
  <%- modelName %>Effects,
<% } // for modelName in models -%>
];
